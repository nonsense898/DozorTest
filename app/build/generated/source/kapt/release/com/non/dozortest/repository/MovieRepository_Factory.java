// Generated by Dagger (https://dagger.dev).
package com.non.dozortest.repository;

import android.content.Context;
import com.non.dozortest.network.ApiService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast",
    "deprecation"
})
public final class MovieRepository_Factory implements Factory<MovieRepository> {
  private final Provider<ApiService> apiServiceProvider;

  private final Provider<Context> contextProvider;

  public MovieRepository_Factory(Provider<ApiService> apiServiceProvider,
      Provider<Context> contextProvider) {
    this.apiServiceProvider = apiServiceProvider;
    this.contextProvider = contextProvider;
  }

  @Override
  public MovieRepository get() {
    return newInstance(apiServiceProvider.get(), contextProvider.get());
  }

  public static MovieRepository_Factory create(Provider<ApiService> apiServiceProvider,
      Provider<Context> contextProvider) {
    return new MovieRepository_Factory(apiServiceProvider, contextProvider);
  }

  public static MovieRepository newInstance(ApiService apiService, Context context) {
    return new MovieRepository(apiService, context);
  }
}
